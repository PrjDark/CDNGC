#deffunc show_appver int, int
	mref var_27, 0
	mref var_28, 1
	if var_27 = 0 {
		var_27 = 10
	}
	if var_28 = 0 {
		var_28 = 10
	}
	gsel var_29
	pos var_27, var_28
	color 0, 0, 0
	font "Consolas", 12
	mes "" + var_14
	return
#deffunc show_netstat int, int
	mref var_27, 0
	mref var_28, 1
	if var_27 = 0 {
		var_27 = 10
	}
	if var_28 = 0 {
		var_28 = 25
	}
	gsel var_29
	pos var_27, var_28
	color 0, 0, 0
	font "Consolas", 12
	if var_16 = 1 {
		mes "NETWORK: OK"
		mes "RANKING: OK"
	}
	else {
		mes "NETWORK: ERR"
		mes "RANKING: ERR"
	}
	return
#deffunc wait_skip int
	mref var_30, 0
	repeat ( var_30 / 10 )
		await 10
		stick var_31, 0, 1
		if var_31 & 256 {
			break
		}
		if var_31 & 128 {
			break
		}
		if var_31 & 64 {
			break
		}
		if var_31 & 32 {
			break
		}
	loop
	return
#deffunc update_user int, int, int, int
	gmode 0, var_5, var_6, 0
	if var_5 = var_7 {
		var_32 = 0
		var_33 = 0
		gsel var_34
		pos 0, 0
		gzoom var_7, var_8, var_35, 0, 0, var_5, var_6
	}
	else {
		var_36 = ( ( 1000 * var_5 ) / var_6 )
		var_32 = 0
		var_33 = ( var_8 - ( 1000 * var_7 / var_36 ) )
		gsel var_34
		pos 0, ( var_33 / 2 )
		gzoom var_7, ( var_8 - ( var_33 ) ), var_35, 0, 0, var_5, var_6
	}
	if var_4 = 1 {
		gsel var_35
		var_37 + +
		bmpsave "Z:\\TEMP\\MidTimePict_" + var_37 + ".bmp"
		gsel var_34
	}
	return
#deffunc update int
	mref var_38, 0
	gmode 1, var_5, var_6, 0
	gsel var_35
	pos 0, 0
	gcopy var_29, 0, 0, var_5, var_6
	if var_38 ! 1 {
		update_user
	}
	gsel var_29
	return
#deffunc update_fade int
	mref var_30, 0
	var_39 = 45
	repeat ( 256 / ( var_39 / 2 ) )
		await var_30
		stick var_31, 0, 1
		if var_3 = 1 {
			break
		}
		if var_31 & 256 {
			break
		}
		if var_31 & 128 {
			break
		}
		if var_31 & 64 {
			break
		}
		if var_31 & 32 {
			break
		}
		gsel var_35
		pos 0, 0
		gmode 3, var_5, var_6, var_39
		gcopy var_29, 0, 0, var_5, var_6
		update_user
	loop
	gmode 1, var_5, var_6, 0
	if var_30 = 0 {
		gsel var_35
		pos 0, 0
		gcopy var_29, 0, 0, var_5, var_6
	}
	if var_30 ! 0 {
		update
	}
	gsel var_29
	return
#deffunc loadbg int, str
	mref var_40, 0
	mref var_41, 33
	if var_40 >= 5 {
		dialog "ID Limit Exceeded BG"
		end
	}
	gsel var_42
	picload "Data/BG/" + var_41
	var_43 = winx
	var_44 = winy
	gsel ( var_45 + var_40 )
	pos 0, 0
	gzoom var_5, var_6, var_42, 0, 0, var_43, var_44
	gsel var_29
	return
#deffunc drawbg int
	mref var_40, 0
	gsel ( var_29 )
	pos 0, 0
	gcopy ( var_45 + var_40 ), 0, 0, var_5, var_6
	gmode 1, var_5, var_6, 0
	gsel var_29
	return
#deffunc loadobject int, str, int, int
	mref var_40, 0
	mref var_41, 33
	mref var_46, 2
	mref var_47, 3
	if var_40 >= 15 {
		dialog "ID Limit Exceeded Obj"
		end
	}
	var_19 . var_40 = var_46
	var_20 . var_40 = var_47
	gsel ( var_48 + var_40 )
	picload "Data/Image/" + var_41
	return
#deffunc drawobjectex int, int, int, int, int, int, int
	mref var_49, 0
	mref var_40, 1
	mref var_50, 2
	mref var_51, 3
	mref var_52, 4
	mref var_53, 5
	mref var_54, 6
	if var_52 = 0 {
		var_52 = 256
	}
	gsel ( var_48 + var_40 )
	var_55 = winx
	var_56 = winy
	if var_19 . var_40 ! 0 {
		var_55 = var_19 . var_40
	}
	if var_20 . var_40 ! 0 {
		var_56 = var_20 . var_40
	}
	gsel ( var_49 )
	pos var_50, var_51
	gmode 4, var_55, var_56, var_52
	color 255, 255, 255
	gcopy ( var_48 + var_40 ), ( var_53 * var_19 . var_40 ), ( var_54 * var_20 . var_40 ), var_55, var_56
	gmode 1, var_5, var_6, 0
	gsel var_29
	return
#deffunc drawobject int, int, int, int, int, int
	mref var_57, 0
	mref var_58, 1
	mref var_59, 2
	mref var_60, 3
	mref var_61, 4
	mref var_62, 5
	drawobjectex var_35, var_57, var_58, var_59, var_60, var_61, var_62
	return
#deffunc drawobjectm int, int, int, int, int, int
	mref var_57, 0
	mref var_58, 1
	mref var_59, 2
	mref var_60, 3
	mref var_61, 4
	mref var_62, 5
	drawobjectex var_29, var_57, var_58, var_59, var_60, var_61, var_62
	return
#deffunc drawobjectingamematrix int, int, int, int, int, int
	mref var_40, 0
	mref var_63, 1
	mref var_64, 2
	mref var_52, 3
	mref var_65, 4
	mref var_66, 5
	if var_40 = -1 {
		return
	}
	var_27 = ( ( var_63 * var_21 ) + var_25 )
	var_28 = ( ( var_64 * var_22 ) + var_26 )
	drawobject var_40, var_27, var_28, var_52, var_65, var_66
	return
#deffunc clear int, int, int, int
	gsel var_29
	cls 4
	return
#deffunc initgamematrix int, int, int, int, int, int
	mref var_67, 0
	mref var_68, 1
	mref var_69, 2
	mref var_70, 3
	mref var_71, 4
	mref var_72, 5
	var_21 = var_67
	var_22 = var_68
	var_23 = var_69
	var_24 = var_70
	var_25 = var_71
	var_26 = var_72
	return
#deffunc drawmatrixdiv int, int, int, int
	repeat ( var_23 + 1 )
		line ( ( cnt * var_21 ) + var_25 ), ( var_26 ), ( ( cnt * var_21 ) + var_25 ), ( winy - 15 )
	loop
	repeat ( var_24 + 1 )
		line ( var_25 ), ( ( cnt * var_22 ) + var_26 ), ( winx - 25 ), ( ( cnt * var_22 ) + var_26 )
	loop
	return
#deffunc initmenu int, int, int, int
	var_73 = ""
	return
#deffunc menu_boot int, int, int, int, int
	mref var_74, 0
	mref var_75, 1
	mref var_31, 2
	mref var_76, 3
	mref var_77, 4
	if var_31 = 0 {
		var_31 = 20
	}
	if var_76 = 0 {
		var_76 = 32
	}
	var_78 = var_77 * 30
	update 1
	notesel var_73
	notemax var_79
	gsel var_29
	pos var_74, var_75
	font "Meiryo", var_31
	mci "close MENU"
	mci "close SELECT"
	mci "open Data/Sound/Menu.wav alias MENU type MPEGVIDEO"
	mci "open Data/Sound/Select.wav alias SELECT type MPEGVIDEO"
	repeat var_79
		noteget var_80, cnt
		pos var_74, ( var_75 + ( var_76 * cnt ) )
		mes var_80
	loop
	loadobject 14, "MenuCur.bmp"
	var_81 = 0
	var_82 = 0
	repeat
		update 1
		var_83 = mousex
		var_84 = ( mousey - ( var_33 / 2 ) * 100 ) / var_9
		stick var_85, 0, 1
		if var_85 & 2 {
			var_81 - -
		}
		if var_85 & 8 {
			var_81 + +
		}
		if var_81 < 0 {
			var_81 = var_79 - 1
		}
		if var_81 >= var_79 {
			var_81 = 0
		}
		if ( var_86 / 10 ) ! ( mousey / 10 ) {
			var_87 = ( var_83 - var_74 ) / 1
			var_88 = ( var_84 - var_75 ) / var_76
			if var_88 >= 0 {
				if var_88 < var_79 {
					var_81 = var_88
				}
			}
		}
		var_86 = mousey
		drawobject 14, ( var_74 - 42 ), ( var_75 + ( var_76 * var_81 ) )
		if var_81 ! var_82 {
			mci "seek MENU to start"
			mci "play MENU"
		}
		if var_85 & 32 {
			var_89 = var_81
			mci "play SELECT"
			break
		}
		if var_85 & 256 {
			var_89 = var_81
			mci "play SELECT"
			break
		}
		if var_78 = 1 {
			var_89 = ( var_79 )
			break
		}
		update_user
		var_82 = var_81
		await 30
		if var_78 ! 0 {
			var_78 - -
		}
	loop
	return
#deffunc getenv str, val, int
	mref var_41, 32
	mref var_90, 25
	mref var_91, 2
	ll_getptr var_41
	ll_ret var_92 . 0
	ll_getptr var_90
	ll_ret var_92 . 1
	var_92 . 2 = ( var_91 = 0 ) * 64 + var_91
	memset var_90, ?, var_92 . 2
	ll_callfunc var_92, 3, var_93
	return
*label_1
	ll_libload var_94, "kernel32.dll"
	ll_getproc var_93, "GetEnvironmentVariableA", var_94
	goto * label_27
#deffunc createstage int, int, int, int
	initgamematrix 48, 48, 12, 6, 200, 150
	loadbg 2, "GameBG.bmp"
	if var_95 = 2 {
		loadbg 2, "GameBG1.bmp"
	}
	if var_95 = 3 {
		loadbg 2, "GameBG2.bmp"
	}
	drawbg 2
	gsel var_29
	color 100, 100, 100
	drawmatrixdiv
	repeat 6
		drawobjectm 0, 30, ( 150 + ( 48 * cnt ) ), 256, 0, cnt
	loop
	font "Meiryo", 32
	color 100, 100, 100
	repeat 6
		pos 90, ( 150 + ( 48 * cnt ) )
		mes "x"
	loop
	return
#deffunc adddango int
	mref var_96, 0
	if var_96 ! 1 {
		mci "seek DNG_ADD to start"
		mci "play DNG_ADD"
	}
	var_97 = ""
	repeat 6
		rnd var_98, ( 51 + var_99 )
		var_98 = var_98 / 10
		var_98 + +
		var_97 = var_97 + var_98
	loop
	notesel var_100
	var_101 = 0
	repeat 12
		noteget var_102, cnt
		if var_102 = "000000" {
			var_101 + +
		}
	loop
	if var_101 = 0 {
		var_103 = 1
		return
	}
	notedel 11
	noteadd "" + var_97
	return
#deffunc verifydango int, int, int, int
	notesel var_100
	var_104 = 0
	repeat 12, 0
		noteget var_102, ( cnt )
		if var_102 = "000000" {
			notedel ( cnt )
			var_104 + +
			break
		}
	loop
	if var_104 ! 0 {
		noteadd "000000"
	}
	return
#deffunc verifydangoex int, int, int, int
	notesel var_100
	var_104 = 0
	repeat 12, 1
		noteget var_102, ( 12 - cnt )
		if var_102 = "000000" {
			notedel ( 12 - cnt )
			var_104 + +
		}
	loop
	repeat var_104
		noteadd "000000"
	loop
	return
#deffunc setdango int, int, int
	mref var_105, 0
	mref var_106, 1
	mref var_107, 2
	notesel var_100
	noteget var_102, var_106
	strmid var_108, var_102, 0, ( 5 - var_107 )
	strmid var_109, var_102, ( 5 - var_107 + 1 ), ( var_107 )
	var_102 = var_108 + var_105 + var_109
	notedel var_106
	noteadd var_102, var_106
	return
#deffunc getdango val, int, int
	mref var_105, 16
	mref var_106, 1
	mref var_107, 2
	notesel var_100
	noteget var_102, var_106
	strmid var_105, var_102, ( 5 - var_107 ), 1
	int var_105
	return
#deffunc initdango int, int, int, int
	var_100 = ""
	notesel var_100
	repeat 12
		noteadd "000000"
	loop
	return
#deffunc drawscore int, int, int, int
	update 1
	gsel var_35
	font "Meiryo", 32
	color 0, 0, 0
	pos 140, 8
	mes var_110
	pos 140, 58
	mes var_111
	pos 365, 8
	mes var_112
	font "Meiryo", 48
	color 0, 0, 0
	pos 680, 8
	mes var_113
	font "Meiryo", 36
	color 0, 0, 0
	pos 110, ( 150 + ( 48 * 0 ) )
	mes var_114
	pos 110, ( 150 + ( 48 * 1 ) )
	mes var_115
	pos 110, ( 150 + ( 48 * 2 ) )
	mes var_116
	pos 110, ( 150 + ( 48 * 3 ) )
	mes var_117
	pos 110, ( 150 + ( 48 * 4 ) )
	mes var_118
	pos 110, ( 150 + ( 48 * 5 ) )
	mes var_119
	font "Meiryo", 26
	color 0, 0, 0
	pos 160, ( 110 )
	mes "x " + var_120
	font "Meiryo", 22
	color 0, 0, 0
	pos 680, ( 100 )
	if var_95 = 1 {
		mes "EASY"
	}
	if var_95 = 2 {
		mes "NORMAL"
	}
	if var_95 = 3 {
		mes "HARD"
	}
	return
#deffunc drawdango int, int, int, int
	notesel var_100
	notemax var_121
	if var_121 ! 12 {
		dialog "Unknown Error 12"
		goto label_45
	}
	repeat 12
		noteget var_102, cnt
		var_122 = cnt
		repeat 6
			strmid var_123, var_102, cnt, 1
			int var_123
			drawobjectingamematrix 0, ( var_122 ), ( 5 - cnt ), 0, 0, ( var_123 - 1 )
		loop
	loop
	return
#deffunc drawbutton int, int, int, int
	drawobject 1, 250, 100, 0, 0, var_124
	if var_124 = 2 {
		gsel var_35
		pos 520, 102
		font "Meiryo", 22
		color 222, 222, 222
		mes "" + var_125
		gsel var_29
	}
	return
#deffunc drawcursor int, int, int, int
	var_126 = ( mousex - ( var_32 / 2 ) * 100 ) / var_9
	var_127 = ( mousey - ( var_33 / 2 ) * 100 ) / var_9
	if var_126 > var_25 {
		if mousey > var_26 {
			if ( var_126 / 10 ) ! ( var_128 / 10 ) {
				var_129 = ( var_126 - 200 ) / 48
				var_130 = ( var_127 - 150 ) / 48
			}
			if ( mousey / 10 ) ! ( var_131 / 10 ) {
				var_129 = ( var_126 - 200 ) / 48
				var_130 = ( var_127 - 150 ) / 48
			}
		}
	}
	if var_129 < 0 {
		var_129 = 11
	}
	if var_130 < 0 {
		var_130 = 5
	}
	if var_129 >= 12 {
		var_129 = 0
	}
	if var_130 >= 6 {
		var_130 = 0
	}
	if var_132 ! -1 {
		drawobjectingamematrix 8, var_132, var_133, 128
	}
	drawobjectingamematrix 7, var_129, var_130
	var_128 = var_126
	var_131 = var_127
	return
#deffunc proceburned int, int, int, int
	mci "seek DNG_BURN to start"
	mci "play DNG_BURN"
	adddango 1
	if var_95 = 2 {
		var_112 - = 100
		if var_112 < 0 {
			var_112 = 0
		}
	}
	if var_95 = 3 {
		adddango
		var_112 = var_112 / 2
	}
	if var_95 = 1 {
		var_114 = var_114 / 2
		var_115 = var_115 / 2
		var_116 = var_116 / 2
		var_117 = var_117 / 2
		var_118 = var_118 / 2
		var_119 = var_119 / 2
	}
	else {
		var_114 = 0
		var_115 = 0
		var_116 = 0
		var_117 = 0
		var_118 = 0
		var_119 = 0
	}
	return
#deffunc proceglobalvars int, int, int, int
	var_120 = var_114 + var_115 + var_116 + var_117 + var_118 + var_119
	if var_120 = 0 {
		if var_124 = 0 {
			var_124 = 3
		}
	}
	else {
		if var_124 = 3 {
			var_124 = 0
		}
	}
	return
#deffunc proceclick int, int, int, int
	if var_134 = 1 {
		var_134 = 0
		return
	}
	var_135 = var_132
	var_136 = var_133
	var_137 = var_138
	var_132 = var_129
	var_133 = var_130
	getdango var_138, var_132, var_133
	if var_138 = 0 {
		var_132 = -1
		var_133 = -1
		return
	}
	if var_138 = 6 {
		proceburned
		return
	}
	if var_138 = var_137 {
		if var_132 = var_135 {
			if var_133 = var_136 {
				return
			}
		}
		mci "seek DNG_OK to start"
		mci "play DNG_OK"
		setdango 0, var_132, var_133
		setdango 0, var_135, var_136
		if var_138 = 1 {
			var_114 + +
			var_139 + +
		}
		if var_138 = 2 {
			var_115 + +
			var_140 + +
		}
		if var_138 = 3 {
			var_116 + +
			var_141 + +
		}
		if var_138 = 4 {
			var_117 + +
			var_142 + +
		}
		if var_138 = 5 {
			var_118 + +
			var_143 + +
		}
		var_112 + = 10
		var_132 = -1
		var_133 = -1
		var_135 = -1
		var_136 = -1
		var_138 = 0
		var_137 = -1
	}
	else {
		mci "seek DNG_SELECT to start"
		mci "play DNG_SELECT"
	}
	return
#deffunc proceclickr int, int, int, int
	var_144 = var_129
	var_145 = var_130
	getdango var_146, var_144, var_145
	if var_146 = 0 {
		return
	}
	if var_146 = 6 {
		setdango 0, var_144, var_145
		var_119 + +
		var_147 + +
		var_112 + = 20
		mci "seek DNG_OK to start"
		mci "play DNG_OK"
	}
	if var_146 ! 6 {
		mci "seek DNG_ERR to start"
		mci "play DNG_ERR"
		if var_95 = 2 {
			var_112 - = 100
			if var_112 < 0 {
				var_112 = 0
			}
			var_113 - = 5
		}
		if var_95 = 3 {
			adddango
			var_112 = var_112 / 2
			var_113 - = 5
		}
	}
	var_132 = -1
	var_133 = -1
	var_135 = -1
	var_136 = -1
	var_138 = 0
	var_137 = -1
	return
#deffunc procescorewithout int, int, int, int
	var_110 + = var_120
	var_125 = var_120
	if var_95 = 2 {
		var_125 = var_125 / 2
	}
	if var_95 = 3 {
		var_125 = var_125 / 4
	}
	var_112 + = ( var_120 * 100 )
	var_112 + = ( var_113 * 2 )
	var_112 + = ( var_111 * 100 )
	var_112 + = ( var_110 * 10 )
	if var_114 = var_115 {
		if var_116 = var_117 {
			if var_118 = var_119 {
				if var_114 = var_116 {
					if var_114 = var_118 {
						var_112 + = ( var_114 * 10000 )
					}
				}
			}
		}
	}
	var_148 = var_114
	if var_148 < var_115 {
		var_148 = var_115
	}
	if var_148 < var_116 {
		var_148 = var_116
	}
	if var_148 < var_117 {
		var_148 = var_117
	}
	if var_148 < var_118 {
		var_148 = var_118
	}
	if var_148 < var_119 {
		var_148 = var_119
	}
	var_112 + = ( var_148 * 1000 )
	var_114 = 0
	var_115 = 0
	var_116 = 0
	var_117 = 0
	var_118 = 0
	var_119 = 0
	var_111 + +
	if var_95 = 1 {
		if var_111 = 1 {
			var_149 = 9
		}
		if var_111 = 2 {
			var_149 = 8
		}
		if var_111 = 4 {
			var_149 = 7
		}
		if var_111 = 6 {
			var_149 = 6
		}
		if var_111 = 12 {
			var_149 = 5
		}
		if var_111 = 24 {
			var_149 = 4
		}
		if var_111 = 48 {
			var_149 = 2
		}
		if var_111 = 96 {
			var_149 = 1
		}
	}
	if var_95 = 2 {
		if var_111 = 3 {
			var_149 = 6
		}
		if var_111 = 6 {
			var_149 = 5
		}
		if var_111 = 12 {
			var_149 = 4
		}
		if var_111 = 24 {
			var_149 = 2
		}
		if var_111 = 48 {
			var_149 = 1
		}
	}
	if var_95 = 3 {
		if var_111 = 1 {
			var_149 = 6
		}
		if var_111 = 4 {
			var_149 = 5
		}
		if var_111 = 8 {
			var_149 = 4
		}
		if var_111 = 16 {
			var_149 = 2
		}
		if var_111 = 32 {
			var_149 = 1
		}
	}
	return
#deffunc procebutton int, int, int, int
	if var_150 & 16 {
	}
	else {
		if var_126 < 250 {
			return
		}
		if var_127 < 100 {
			return
		}
		if var_126 > ( 250 + 426 ) {
			return
		}
		if var_127 > ( 100 + 36 ) {
			return
		}
	}
	var_134 = 1
	if var_124 ! 0 {
		return
	}
	var_124 = 1
	drawbutton
	update_user
	procescorewithout
	var_124 = 2
	mci "seek DNG_OUT to start"
	mci "play DNG_OUT"
	await 33
	adddango
	var_151 = var_149
	return
#deffunc proceinput int, int, int, int
	stick var_150, 0, 1
	if var_150 & 1 {
		var_129 - -
	}
	if var_150 & 2 {
		var_130 - -
	}
	if var_150 & 4 {
		var_129 + +
	}
	if var_150 & 8 {
		var_130 + +
	}
	if var_150 & 16 {
		procebutton
	}
	if var_150 & 32 {
		proceclick
	}
	if var_150 & 256 {
		procebutton
		proceclick
	}
	if var_150 & 512 {
		proceclickr
	}
	if var_150 & 1024 {
		proceclickr
	}
	if var_150 & 128 {
		var_103 = 1
	}
	return
#deffunc initgame int, int, int, int
	var_100 = ""
	var_152 = 1
	var_149 = 10
	var_112 = 0
	var_110 = 0
	var_111 = 0
	var_113 = 0
	var_151 = var_149
	var_120 = 0
	var_114 = 0
	var_115 = 0
	var_116 = 0
	var_117 = 0
	var_118 = 0
	var_119 = 0
	var_139 = 0
	var_140 = 0
	var_141 = 0
	var_142 = 0
	var_143 = 0
	var_147 = 0
	var_129 = 0
	var_130 = 0
	var_132 = -1
	var_133 = -1
	var_135 = -1
	var_136 = -1
	var_138 = 0
	var_137 = -1
	var_144 = -1
	var_145 = -1
	var_146 = 0
	var_134 = 0
	var_124 = 0
	var_103 = 0
	var_153 = 0
	mci "open Data/Sound/Select.wav alias DNG_SELECT type MPEGVIDEO"
	mci "open Data/Sound/DNGBad.wav alias DNG_BAD type MPEGVIDEO"
	mci "open Data/Sound/DNGBurn.wav alias DNG_BURN type MPEGVIDEO"
	mci "open Data/Sound/DNGOut.wav alias DNG_OUT type MPEGVIDEO"
	mci "open Data/Sound/DNGOK.wav alias DNG_OK type MPEGVIDEO"
	mci "open Data/Sound/DNGAdd.wav alias DNG_ADD type MPEGVIDEO"
	mci "open Data/Sound/DNGGO.wav alias DNG_GO type MPEGVIDEO"
	mci "open Data/Sound/DNGErr.wav alias DNG_ERR type MPEGVIDEO"
	return
*label_27
	alloc var_154, 1024
	getenv "TEMP", var_154, 1024
	rnd var_155, 32768
	rnd var_156, 32768
	var_157 = var_155 * var_156
	var_154 + = "\\Ranking_" + var_15 + "_" + var_157 + ".dat"
	exec "Data\\bin\\getRanking " + var_154
	var_158 = var_154
	goto * label_58
#deffunc geturlinfo val, str
	mref var_159, 56
	mref var_160, 33
	getstr var_159 . 0, var_160, 0, 58
	var_161 = strsize
	repeat 3
		peek var_162, var_160, var_161
		if var_162 = 47 {
			var_161 + +
		}
		else {
			break
		}
	loop
	getstr var_159 . 1, var_160, var_161, 47
	var_161 + = strsize
	peek var_159 . 3, var_160, var_161 - 1
	var_159 . 2 = "80"
	instr var_161, var_159 . 1, ":", 0
	if var_161 > 0 {
		poke var_159 . 1, var_161, 0
		peek var_159 . 2, var_159 . 1, var_161 + 1
	}
	return
#deffunc seturl str
	mref var_163, 32
	sdim var_164, 64, 4
	geturlinfo var_164, var_163
	dim var_165, 256
	int var_166
	dim var_167, 512
	var_165 = var_164 . 1
	var_166 = 0 + var_164 . 2
	var_167 = var_164 . 3
	return
#deffunc setpost val
	mref var_168, 24
	strlen var_169, var_168
	sdim var_170, var_169 + 16
	var_170 = var_168
	return
#deffunc setrange int, int
	mref var_171, 0
	mref var_172, 1
	var_173 = var_171, var_172
	return
#deffunc dl_2 int, int, int, int
	mref var_174, 64
	if var_175 = 2 {
		var_175 = 1
		exist var_176
		if strsize = -1 | ( var_177 = 0 ) {
			bsave var_176, var_178, 1
		}
	}
	if var_179 ! 0 & ( var_179 < var_180 ) {
		var_174 = 0
		return
	}
	if var_181 {
		if var_175 {
			bsave var_176, var_178, var_181, var_180
		}
		else {
			memcpy var_182, var_178, var_181, var_180
		}
		var_180 + = var_181
	}
	func_sockcheck 0
	if stat = 2 {
		var_174 = -1
		return
	}
	if var_175 {
		func_sockgetb var_178, 0, 16384, 0
		if stat {
			bsave var_176, var_178, stat, var_180
		}
	}
	else {
		func_sockgetb var_182, var_180, 16384, 0
	}
	var_180 + = stat
	var_174 = stat
	if var_181 {
		var_174 + = var_181
		var_181 = 0
	}
	if stat = 0 {
		func_sockclose
	}
	return
#deffunc dl_1 str, int
	mref var_183, 32
	mref var_172, 1
	mref var_174, 64
	mref var_184, 65
	sdim var_185, 16384
	if var_183 ! "" {
		seturl var_183
	}
	var_186 = var_172
	var_174 = 0
	func_sockopen 0, var_165, var_166
	if stat {
		var_174 = -1
		return
	}
	if var_170 ! "" {
		func_sockput "POST " + var_167 + " HTTP/1.0\n"
		strlen var_169, var_170
		func_sockput "Content-Length: " + var_169 + "\n"
	}
	else {
		func_sockput "GET " + var_167 + " HTTP/1.0\n"
	}
	func_sockput "User-Agent: " + "ProjectDark_[getUpdater]/1.00" + "\n"
	func_sockput "Host: " + var_165 + "\n"
	if var_173 . 0 | var_173 . 1 {
		var_161 = var_173 . 0 + var_173 . 1
		func_sockput "Range: bytes=" + var_173 . 0 + "-" + var_161 + "\n"
	}
	func_sockput "\n"
	if var_170 ! "" {
		func_sockput var_170
		func_sockput "\n"
	}
	var_173 = 0, 0
	var_170 = ""
	var_180 = 0
	repeat 6
		func_sockgetb var_185, var_180, 256, 0
		var_180 + = stat
		instr var_161, var_185, "\n\n"
		if var_161 > 0 {
			break
		}
		await 10
	loop
	if var_161 < 0 {
		var_174 = -2
		func_sockclose
		return
	}
	sdim var_178, 16384
	memcpy var_178, var_185, var_180 - var_161 - 4, 0, var_161 + 4
	var_181 = var_180 - var_161 - 4
	poke var_178, var_181, 0
	poke var_185, var_161 + 2, 0
	getstr var_187, var_185, 0, 32
	var_161 = strsize
	getstr var_187, var_185, var_161, 32
	getstr var_184, var_185, var_161
	if var_173 . 0 | var_173 . 1 {
		if var_187 ! "206" {
			func_sockclose
			var_174 = 0 - var_187
			return
		}
	}
	else {
		if var_187 ! "200" {
			func_sockclose
			var_174 = 0 - var_187
			return
		}
	}
	var_180 = var_177
	if var_186 {
		var_174 = 0
		return
	}
	repeat
		dl_2
		if stat < 1 {
			break
		}
		await 0
	loop
	var_174 = var_180 - var_177
	return
#deffunc gethead val
	mref var_168, 24
	var_168 = var_185
	return
#deffunc getheaddat val, str
	mref var_168, 24
	mref var_188, 33
	mref var_174, 64
	instr var_161, var_185, "\n" + var_188 + ":"
	if var_161 > 0 {
		strlen var_169, var_188
		getstr var_168, var_185, var_161 + var_169 + 4
		var_174 = 1
	}
	else {
		var_168 = ""
		var_174 = 0
	}
	return
#deffunc setbuf val, int, int
	mref var_189, 1024
	if var_189 & 65535 = 4 {
		mref var_182, 16
	}
	else {
		mref var_182, 24
	}
	mref var_172, 1
	mref var_190, 2
	var_179 = var_172
	var_177 = var_190
	var_175 = 0
	return
#deffunc setfile str, int
	mref var_183, 32
	mref var_172, 1
	var_176 = var_183
	var_177 = var_172
	var_179 = 0
	var_175 = 2
	return
#deffunc urlenc val, str
	mref var_191, 24
	mref var_163, 33
	var_161 = 0
	repeat
		peek var_162, var_163, cnt
		if var_162 = 0 {
			break
		}
		if var_162 < 45 | ( var_162 > 57 & ( var_162 < 64 ) ) | ( var_162 > 90 & ( var_162 < 97 ) ) | ( var_162 > 122 ) {
			var_192 = var_162
			str var_192, 17
			poke var_191, var_161, "%" + var_192
			var_161 + = 3
		}
		else {
			poke var_191, var_161, var_162
			var_161 + +
		}
	loop
	poke var_191, var_161, 0
	return
#deffunc urldec val, str
	mref var_191, 24
	mref var_163, 33
	var_161 = 0
	repeat
		peek var_162, var_163, var_161
		if var_162 = 0 {
			poke var_191, cnt, 0
			break
		}
		if var_162 < 32 {
			var_161 + +
			continue
		}
		if var_162 = 37 {
			strmid var_192, var_163, var_161 + 1, 2
			var_162 = "$" + var_192
			int var_162
			poke var_191, cnt, var_162
			var_161 + = 3
		}
		else {
			if var_162 = 43 {
				var_162 = 32
			}
			poke var_191, cnt, var_162
			var_161 + +
		}
	loop
	return
